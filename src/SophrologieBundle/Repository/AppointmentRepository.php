<?php

namespace SophrologieBundle\Repository;

use SophrologieBundle\Entity\Theme;

/**
 * AppointmentRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AppointmentRepository extends \Doctrine\ORM\EntityRepository
{
    /*public function findAllAppointmentsByDayOrderByDate(\DateTime $begin, \DateTime $end){
        $queryBuilder = $this->createQueryBuilder('s');
        $queryBuilder
            ->where('s.date BETWEEN :begin AND :end')
            ->setParameter('begin', $begin)
            ->setParameter('end', $end)
        ;
        $query = $queryBuilder->getQuery();
        $result = $query->getResult();
        return $result;

    }*/
    public function findAllAppointmentsByDay(\DateTime $begin){
        $end = clone $begin;
        $end->add(new \DateInterval('P1D'));

        $queryBuilder = $this->createQueryBuilder('s');
        $queryBuilder
            ->where('s.date BETWEEN :begin AND :end')
            ->setParameter('begin', $begin)
            ->setParameter('end', $end)
            ->orderBy('s.date')
        ;
        $query = $queryBuilder->getQuery();
        $result = $query->getResult();
        return $result;

    }

    public function findAppointmentsToDelete(\DateTime $now){

        $subQueryBuilder = $this->createQueryBuilder('app');
        $subQuery = $subQueryBuilder
            ->innerJoin('app.users', 'u')
            ->where('app.date < :now')
            ->andWhere('u.id > :user_number')
            ->setParameter('now', $now)
            ->setParameter('user_number', 0)
            ->getQuery()
            ->getArrayResult()
        ;

        $queryBuilder = $this->createQueryBuilder('app');
        $queryBuilder
            ->delete()
            ->where($queryBuilder->expr()->notIn('app.id', ':app_id'))
            ->andWhere('app.date < :now')
            ->setParameter('now', $now)
            ->setParameter('app_id', $subQuery);


        $query = $queryBuilder->getQuery();
        $result = $query->getResult();
        return $result;

    }


    public function findAllAppointmentsByThemeAndOrderByDate(Theme $theme){
        $queryBuilder = $this->createQueryBuilder('s');
        $queryBuilder
            ->where('s.theme = :theme')
            ->orderBy('s.date')
            ->orderBy('s.id')
            ->setParameter('theme', $theme)
        ;
        $query = $queryBuilder->getQuery();
        $result = $query->getResult();
        return $result;

    }

    /*public function findt(){
        $queryBuilder = $this->createQueryBuilder('s');
        $queryBuilder
            ->where('s.theme = :theme')
            ->orderBy('s.date')
            ->setParameter('theme', $theme)
        ;
        $query = $queryBuilder->getQuery();
        $result = $query->getResult();
        return $result;

    }*/

}
